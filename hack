#!/usr/bin/env racket
#lang racket/load
(require racket)
(define _srcdir* (path->string (let-values (((base _2 _3) (split-path (normalize-path (find-system-path (quote run-file)))))) base)))
(namespace-require (list (quote file) (string-append _srcdir* "arc3.1_ac.scm")))
(namespace-require (list (quote file) (string-append _srcdir* "arc3.1_brackets.scm")))
(use-bracket-readtable)
(aload (string-append _srcdir* "arc3.1_arc.arc"))
(aload (string-append _srcdir* "arc3.1_strings.arc"))
(aload (string-append _srcdir* "aw_begins-rest0.arc"))
(aload (string-append _srcdir* "aw_extend0.arc"))
(aload (string-append _srcdir* "aw_partition0.arc"))
(aload (string-append _srcdir* "aw_redef0.arc"))
(aload (string-append _srcdir* "aw_ret0.arc"))
(aload (string-append _srcdir* "aw_scheme0.arc"))
(aload (string-append _srcdir* "aw_defvar4.arc"))
(aload (string-append _srcdir* "aw_homedir0.arc"))
(aload (string-append _srcdir* "aw_parameter0.arc"))
(aload (string-append _srcdir* "aw_dynamic0.arc"))
(aload (string-append _srcdir* "aw_implicit3.arc"))
(aload (string-append _srcdir* "aw_cwd0.arc"))
(aload (string-append _srcdir* "aw_re3.arc"))
(aload (string-append _srcdir* "aw_urlencode3.arc"))
(aload (string-append _srcdir* "aw_xloop0.arc"))
(aload (string-append _srcdir* "notest.arc"))
(aload (string-append _srcdir* "download.arc"))
(aload (string-append _srcdir* "file.arc"))
(aload (string-append _srcdir* "satisfy.arc"))
(aload (string-append _srcdir* "source.arc"))
(aload (string-append _srcdir* "technique.arc"))
(aload (string-append _srcdir* "rsyntax.arc"))
(aload (string-append _srcdir* "build.arc"))
(aload (string-append _srcdir* "recipe.arc"))
(aload (string-append _srcdir* "hackinator.arc"))
